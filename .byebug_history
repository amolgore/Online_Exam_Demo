c
@comments
c
Comment.all.where(parent_id: nil)
Comment.parents
Comments.parents
Comments.parents.all
Comment.parents.all
Comment.parents
Comment
c
@comment_with_childrens
c
@comment_with_childrens
c
@comment_with_childrens
c
@comment_with_childrens.first.first
@comment_with_childrens.first
@comment_with_childrens
c
@comment_with_childrens
comment_with_childrens
c
Comment.all.where(parent_id: nil)
@comments
c
@comments
@comments.class.class
@comments.class
@comments.all
@comments
c
@comments.children
@comments.childrens
@comments
@comment
exit
from_reply_form ||= nil
from_reply_form
exit
@comment.children
@comment.childrens
@comment = Comment.find 10
@comment.children
@comment.parent
@comment = Comment.find 11
@comment.parent
@comment = Comment.find 12
@comment.parent
@comment = Comment.find 10
@comment = Comment.find 3
@comment = Comment.find 2
@comment = Comment.find 1
@comment = find 1
@comment = find 2
@comment.parent
@comment = Comment.all
@comment
c
comment_params
@comment
params
exit
option.answers.find_by(user_id:current_user.id).present?
option.answers.find_by(user_id:current_user.id)
option.answers
option
c
option
option.answers
option
exit
option.answers.find_by(user_id:current_user.id).present?
option.answers.include?(user_id:current_user.id)
option.answers.find_by(user_id:current_user.id).present?
option.answers.find_by(user_id:current_user.id)
option.answers.find(user_id:current_user.id)
option.answers.find_by(user_id:current_user.id)
option.answers
Answer.find_by(user_id:current_user.id)
option.answers.include?(Answer.find_by(user_id:current_user.id))
option.answers.include?(option.answers.user_id:current_user.id)
option.answers.include?(answers.user_id:current_user.id)
option.answers.include?(answers.user_id:current_user.id))
option.answers
option.answers.include?(Answer.find_by(user_id:current_user.id))
option.answers.include?(Answers.find_by(user_id:current_user.id))
option.answers.include?(Answer.find_by(user_id:user_id))
option.answers.include?(Answer.find_by(user_id))
option.answers.include?(Answer.find_by(:user_id))
option.answers.include?(Answer.find(:user_id))
option.answers.include?(user_id=62)
option.answers.include?(user_id:62)
option.answers.include?(62)
option.answers
option.answers.include?
option.answers.include?"user_id"
option.answers.include? "user_id"
option.answers.include?(user_id)
option.answers.include?(user_id == current_user.id)
option.answers.include?(user_id)
option.answers.user_id.include?(user_id)
option.answers.user_id.include?
option.answers
option.answers.present?
option.answers.present? current_user.id
option.answers
option
question
option
option.user_id
option.user_id == current_user.id
option.answers.first.user_id == current_user.id
option.answers.user_id == current_user.id
option.answers
option.answers.user_id.present?
option.answers.first.user_id.present?
option.answers.first.user_id
option.answers.first
option.answers
option
exit
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
cc
@answer
c
option.answers.present?
c
option.answers.present?
c
option.answers.present?
c
option.answers.present?
c
option.answers.present?
c
option.answers.present?
c
option.answers.present?
option.answers
option
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
@answer
c
option.answers.present?
option.answers
c
option.answers
option
c
option.answers
c
option.answers
c
option.answers
c
option.answers
c
option.answers
option
@questions_by_set_with_paginate
option.answers
option.answers.present? 
c
option.answers.present? 
@answer
c
@answer
c
@answer
c
checked_answer
c
checked_answer
c
checked_answer
c
checked_answer
c
checked_answer
